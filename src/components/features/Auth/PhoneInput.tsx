/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
 * Last Updated: 29-10-2025
 */

import React, { useState } from 'react';
import { Button, Input } from '@components/ui';
import { validatePhone } from '@/utils/validators';
import { formatPhoneNumber } from '@/utils/formatters';
import './PhoneInput.css';

export interface PhoneInputProps {
  onSubmit: (phone: string) => Promise<void>;
  isLoading?: boolean;
}

export const PhoneInput: React.FC<PhoneInputProps> = ({ onSubmit, isLoading }) => {
  const [phone, setPhone] = useState('');
  const [error, setError] = useState('');

  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value.replace(/\D/g, '');
    setPhone(value);
    if (error) setError('');
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!phone) {
      setError('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
      return;
    }

    const fullPhone = phone.startsWith('7') ? `+${phone}` : `+7${phone}`;

    if (!validatePhone(fullPhone)) {
      setError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
      return;
    }

    await onSubmit(fullPhone);
  };

  return (
    <form onSubmit={handleSubmit} className="phone-input">
      <div className="phone-input__header">
        <h2 className="phone-input__title">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
        <p className="phone-input__description">
          –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        </p>
      </div>

      <Input
        type="tel"
        label="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
        placeholder="+7 (___) ___-__-__"
        value={formatPhoneNumber(phone)}
        onChange={handlePhoneChange}
        error={error}
        leftIcon="üì±"
        disabled={isLoading}
        autoFocus
      />

      <Button
        type="submit"
        fullWidth
        loading={isLoading}
        disabled={!phone || isLoading}
      >
        –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥
      </Button>
    </form>
  );
};

